using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public class Person
{
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public Person(string firstName, string lastName)
    {
        FirstName = firstName;
        LastName = lastName;
    }
}

public class Author : Person
{
    public List<Book> BookList { get; set; }
    public Author(string firstName, string lastName) : base(firstName, lastName)
    {
        BookList = new List<Book>();
    }

    public void AddBook(Book book)
    {
        BookList.Add(book);
    }
}

public class Book
{
    public string Title { get; set; }
    public Author Author { get; set; }

    public int PublicationYear { get; set; }

    public Book(string title, Author author, int publicationYear)
    {
        Title = title;
        Author = author;
        PublicationYear = publicationYear;
    }
}

public class Reader : Person
{
    public List<Book> BorrowedBooksList { get; set; }
    public Reader(string firstName, string lastName) : base(firstName, lastName)
    {
        BorrowedBooksList = new List<Book>();
    }
    public void AddBook(Book book)
    {
        BorrowedBooksList.Add(book);
        Console.WriteLine($"Czytelnik {FirstName} {LastName} wypożyczył książkę: {book.Title}");
    }


}

public class Library
{
    public List<Book> BooksList { get; set; }
    public List<Author> AuthorsList {  get; set; }
    public List<Reader> ReadresList { get; set; }

    public Library()
    {
        BooksList = new List<Book>();
        AuthorsList = new List<Author>();
        ReadresList = new List<Reader> ();
    }

    public void AddBook(Book book)
    {
        BooksList.Add(book);
    }

    public void AddAuthor(Author author)
    {
        AuthorsList.Add(author);
    }

    public void AddReader(Reader reader)
    {
        ReadresList.Add(reader);
    }

    public void BorrowBook(Reader reader, Book book)
    {
        if (BooksList.Contains(book))
        {
            reader.BorrowBook(book);
        }
        else
        {
            Console.WriteLine("Książka nie jest dostępna");
        }
    }

    public void DisplayBooks()
    {
        Console.WriteLine("Książki w bibliotece: ");
        foreach(Book book in BooksList)
        {
            Console.WriteLine($"{book.Title} - {book.Author.FirstName} {book.Author.LastName} {book.PublicationYear}");
        }
    }

    public void DisplayAuthors()
    {
        Console.WriteLine("Autorzy w bibliotece: ");
        foreach (Author author in AuthorsList)
        {
            Console.WriteLine($"{author.FirstName} {author.LastName}");
        }
    }

    public void DisplayBorrowedBooks()
    {
        Console.WriteLine("Wypożyczone książki: ");
        foreach(var reader in ReadresList)
        {
            foreach(Book book in reader.BorrowedBooksList)
            {
                Console.WriteLine($"{book.Title} - {book.Author.FirstName} {book.Author.LastName} wypżyczona przez: {reader.FirstName} {reader.LastName}");
            }
        }
    }
}

namespace _2_dziedziczenie_kompozycja_biblioteka
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Author author = new Author("Adam", "Mickiewicz");
            Author author2 = new Author("Henryk", "Sienkiewicz");
            Book book = new Book("Pan Tadeusz", author, 1834);
            Book book2 = new Book("Quo Vadis", author2, 1896);

            author.AddBook(book);
            author2.AddBook(book2);

            Library library = new Library();
            library.AddBook(book);
            library.AddBook(book2);

            library.AddAuthor(author);
            library.AddAuthor(author2);
            Console.ReadKey();
        }
    }
}
