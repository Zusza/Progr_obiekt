using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace _7._11._23r
{
    internal class Program
    {
        static void Main(string[] args)
        {
            ///Inicjalizacja tablicy podczas jej deklaracji
            //int[] tabInt = { 1, 2, 3, 4, 5};
            //Console.WriteLine(tabInt[0]);//1
            //Console.WriteLine(tabInt[tabInt.Length-1]);//5

            ///Deklaracja tablicy
            //int[] tabInt2 = new int[5];
            //tabInt2[0] = 1;
            //tabInt2[1] = 2;
            //tabInt2[2] = 33;
            //tabInt2[3] = -1;
            //tabInt2[4] = 10;
            //foreach (int i in tabInt2)
            //{
            //    Console.Write($"{i} ");
            //}

            //Zad.1 - Napisz program, który pobiera od użytkownika 5 liczb całkowitych i zapisuje je w tablicy.
            //        Następnie program wyświetla sumę wszystkich elementów tablicy.
            //int[] T = new int[5];
            //int sum = 0;
            //for (int i = 0; i < T.Length; i++)
            //{
            //    int j = int.Parse(Console.ReadLine());
            //    T[i] += j;
            //    sum += j;
            //}
            //Console.WriteLine(sum);

            //Zad.2 - Napisz program, który pobiera od użytkownika 5 liczb całkowitych i zapisuje je w tablicy.
            //Następnie program wyświetla sumę wszystkich elementów tablicy. W celu zabezpieczenia programu przed
            //niepoprawnymi danymi wejściowymi, użyliśmy metody int.TryParse(), która pozwala na sprawdzenie, czy
            //wprowadzona wartość jest liczbą całkowitą. Jeśli użytkownik wprowadzi niepoprawną wartość, program
            //wyświetli stosowny komunikat i poprosi o ponowne wprowadzenie liczby.
            //int[] T = new int[5];
            //int n = 0;
            //int i = 0;
            //int sum = 0;
            //Console.WriteLine("Podaj liczbę: ");
            //while (i != 5)
            //{
            //    while (!int.TryParse(Console.ReadLine(), out n))
            //    {
            //        Console.WriteLine("Podaj prawidłowe dane! Podaj liczbę:");
            //    }
            //    sum += n;
            //    T[i] = n;
            //    i++;
            //}
            //Console.WriteLine(sum);

            //Tajemnicze zadanie - Napisz program w C#, który wczytuje od użytkownika 5 liczb całkowitych i zapisuje je w tablicy. 
            //Następnie program prosi użytkownika o podanie indeksu tablicy i wyświetla liczbę znajdującą się pod tym indeksem. 
            //Jeśli użytkownik wprowadzi indeks spoza zakresu tablicy, program powinien zgłosić wyjątek ArgumentOutOfRangeException
            //i wyświetlić odpowiedni komunikat.Jeśli użytkownik wprowadzi nieprawidłowe dane, program powinien zgłosić wyjątek FormatException
            //i poprosić o ponowne wprowadzenie danych.Program powinien działać w pętli, dopóki użytkownik nie wpisze q.
            //Użyj instrukcji try-catch do obsługi wyjątkówJeśli liczba jest ujemna, program powinien zgłosić wyjątek ArgumentOutOfRangeException
            //i wyświetlić odpowiedni komunikat. 
            //Jeśli użytkownik wprowadzi nieprawidłowe dane, program powinien zgłosić wyjątek FormatException i poprosić o ponowne wprowadzenie liczby.
            //Do napisania kodu użyj notatnika

            //Zad.3 - Napisz program, który pobiera od użytkownika 5 liczb całkowitych i zapisuje je w tablicy, a następnie wyświetla sumę wszystkich elementów tablicy.
            //Użyj języka programowania C# i środowiska Visual Studio.
            //Zadeklaruj tablicę o rozmiarze 5 i nazwij ją numbers.
            //Użyj pętli for, aby pobrać od użytkownika 5 liczb całkowitych i zapisać je w tablicy numbers.
            //Wyświetl na ekranie komunikat, który prosi użytkownika o podanie kolejnej liczby całkowitej i użyj metody GetIntegerFromUser(), aby ją pobrać i zweryfikować.
            //Zdefiniuj metodę GetIntegerFromUser(), która przyjmuje od użytkownika liczbę całkowitą i zwraca ją.Jeśli użytkownik wprowadzi niepoprawną wartość, metoda wyświetli stosowny komunikat i poprosi o ponowne wprowadzenie liczby.
            //Użyj metody int.TryParse(), aby sprawdzić, czy wprowadzona wartość jest poprawną liczbą całkowitą i przypisać ją do zmiennej input.
            //Zdefiniuj metodę CalculateSum(int[] numbers), która przyjmuje tablicę liczb całkowitych i zwraca ich sumę.
            //Użyj pętli foreach, aby dodać do sumy każdy element tablicy numbers i zwrócić sumę.
            //Wywołaj metodę CalculateSum(numbers) i przypisz jej wynik do zmiennej sum.
            //Wyświetl na ekranie komunikat, który pokazuje sumę podanych liczb.

        }
    }
}
